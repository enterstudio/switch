#creamos y configuramos maquina virtual para key-value store
	
	docker-machine create -d virtualbox p8-ks
	eval "$(docker-machine env p8-ks)"
	docker run -d --name=consul --restart=always -p "8500:8500" -h "consul" progrium/consul -server -bootstrap

#crear swarm cluster
	# creamos máquina dentro del cluster como swarm-master
		
		docker-machine create -d virtualbox --swarm --swarm-master --swarm-discovery="consul://$(docker-machine ip p8-ks):8500" --engine-opt="cluster-store=consul://$(docker-machine ip p8-ks):8500" --engine-opt="cluster-advertise=eth1:2376" p8-k
	# creamos otra máquina dentro del cluster
		
		docker-machine create -d virtualbox --swarm --swarm-discovery="consul://$(docker-machine ip p8-ks):8500" --engine-opt="cluster-store=consul://$(docker-machine ip p8-ks):8500" --engine-opt="cluster-advertise=eth1:2376" p8-r

#creamos red overlay y bridge
	eval $(docker-machine env --swarm p8-k)
	
	docker network create --driver overlay --internal=true --subnet=192.168.0.0/24 --ip-range=192.168.0.0/24  --gateway=192.168.0.1 uc-net
	
	docker network create --driver bridge --subnet=172.69.0.0/24 --ip-range=172.69.0.0/24  --gateway=172.69.0.1 uc-ext

#construimos, conectamos y corremos contenedores en la red overlay

	eval $(docker-machine env --swarm p8-k)

	docker build -t db ./mysql/
	docker run -itd --name=db --net=uc-net --env="constraint:node==p8-k" -v /home/jorge/uc/prueba8/mysql/dataDir:/var/lib/mysql db
	
	eval $(docker-machine env --swarm p8-r)
	docker build -t rtpproxy ./rtpproxy/

		#puede que deba cambiar 192.168.0.1 por el gateway de docker_gwbridge o mirar en el /etc/hosts del container
		#la ip 10.200.3.60 puede que deba cambiarla por la de p8-k, pero antes probar con la que está o mirar en el /etc/hosts del container
	
	docker run -itd --name=rtpproxy01 -h rtpproxy01 -p 10000-10099:10000-10099/udp --net=prueba8_uc-net prueba8_rtpproxy01 rtpproxy -A rtpproxy01-ext/rtpproxy01 -F -f -l 10.200.3.20/rtpproxy01 -m 10000 -M 10099 -s udp:*:7711 -d DBUG:LOG_LOCAL0

	docker run -itd --name=rtpproxy02 -h rtpproxy02 -p 10100-10199:10100-10199/udp --net=prueba8_uc-net prueba8_rtpproxy02 rtpproxy -A rtpproxy02-ext/rtpproxy02 -F -f -l 10.200.3.99/rtpproxy02 -m 10100 -M 10199 -s udp:*:7722 -d DBUG:LOG_LOCAL0

	docker build -t kamailio ./kamailio/

docker run -it --name=kamailio -h kamailio -v /home/jorge/uc/prueba8/kamailio/etc/kamailio:/etc/kamailio -p 5060-5061:5060-5061/udp --net=prueba8_uc-net prueba8_kamailio
