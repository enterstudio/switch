docker build -t db ./mysql/
docker build -t rtpproxy ./rtpproxy/
docker build -t asterisk ./asterisk/
docker build -t kamailio ./kamailio/

docker run -it --name=db01 --ip=192.168.0.100 --add-host="kamailio01:192.168.0.120" --add-host="asterisk01:192.168.0.110" --net=lan -v /home/jorge/uc/prueba5/mysql/dataDir:/var/lib/mysql db
-----------------------------------------------------------------------------------------------------------
Entramos en el container db01 para crear la base de datos asterisk, pero solo la primera vez, luego con el volumen compartido tenemos persistencia de datos:

docker exec -it db01 bash
mysql -u root -psupersecret < /temp/asterisk_db.sql
-------------------------------------------------------------------------------------------------------------

docker run -it --name=rtpproxy01 --net=host rtpproxy
docker run -it --name=asterisk01 --ip=192.168.0.110 --net=lan --link="db01" asterisk
docker run -it --name=kamailio01 -v /home/jorge/uc/prueba4/kamailio/etc/kamailio:/etc/kamailio --ip=192.168.0.120 -p 5060-5061:5060-5061/udp --net=lan --link="db01" kamailio
--------------------------------------------------------------------------------------------------------------
Entramos en el container kamailio01 para crear la base de datos de forma remota en db01, pero solo la primera vez, lueg con el volumen compartido de db01 tendremos persistencia de datos:

docker exec -it kamailio01 bash

kamdbctl create
------------------------------------------------------------------------------------------------------------

##### en mysql ####
mysql -ukamailio -pkamailiorw kamailio

INSERT INTO dispatcher (setid,destination,flags,priority,attrs,description) VALUES (1,"sip:192.168.0.110:5060",0,0,"weight=50","Asteriskl-I");

####################################################################################################################################################

docker run -it --name=rtpproxy01 --net=host rtpproxy rtpproxy -A 10.200.3.60/192.168.0.254 -F -f -l 10.200.3.60/192.168.0.254 -m 10000 -M 10099 -s udp:*:7711 -d DBUG:LOG_LOCAL0

docker run -it --name=rtpproxy02 --net=host rtpproxy rtpproxy -A 10.200.3.60/192.168.0.254 -F -f -l 10.200.3.60/192.168.0.254 -m 10100 -M 10199 -s udp:*:7722 -d DBUG:LOG_LOCAL0

docker run -it --name=rtpproxy03 --net=host rtpproxy rtpproxy -A 10.200.3.60/192.168.0.254 -F -f -l 10.200.3.60/192.168.0.254 -m 10200 -M 10299 -s udp:*:7733 -d DBUG:LOG_LOCAL0

docker run -it --name=rtpproxy03 --net=host rtpproxy rtpproxy -A 10.200.3.60/192.168.0.254 -F -f -l 10.200.3.60/192.168.0.254 -m 10300 -M 10399 -s udp:*:7744 -d DBUG:LOG_LOCAL0