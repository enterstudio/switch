version: "2"
services:
  kamailio:
    build: /home/jorge/uc/prueba8/kamailio
    depends_on:
      - db
      - rtpproxy01
      - rtpproxy02
    environment:
      - constraint:node==p8-k
    volumes:
      - /home/jorge/uc/prueba8/kamailio/etc/kamailio:/etc/kamailio
    ports:
      - "5060:5060/udp"
#    hostname: kamailio
    container_name: kamailio
    networks:
      uc-net:
        aliases:
          - kamailio
      uc-ext:
        aliases:
          - kamailio-ext
      # docker_gwbridge:
      #   aliases:
      #     - kamailio-host
# Por alguna raz√≥n publicar el puerto en el compose en este caso da error, por lo que mejor levantamos kamailio a mano hasta que averigue que pasa
# docker run -it --name=kamailio -h kamailio -v /home/jorge/uc/prueba8/kamailio/etc/kamailio:/etc/kamailio -p 5060-5061:5060-5061/udp --net=prueba8_uc-net prueba8_kamailio

  db:
    build: /home/jorge/uc/prueba8/mysql
    #docker run -it --name=db -h db --aliases=db --net=uc-net -v /home/jorge/uc/prueba8/mysql/dataDir:/temp prueba8_db
    environment:
      - constraint:node==p8-k
      - MYSQL_ROOT_PASSWORD=supersecret
    volumes:
#       - /home/jorge/uc/prueba8/mysql/dataDir:/var/lib/mysql
       - /home/jorge/uc/prueba8/mysql/dataDir:/temp
    hostname: db
    container_name: db
    networks:
      uc-net:
        aliases:
          - db
  
  rtpproxy01:
    build: /home/jorge/uc/prueba8/rtpproxy
    #docker run -itd --name=rtpproxy01 -h rtpproxy01 -p 10000-10099:10000-10099/udp --net=prueba8_uc-net prueba8_rtpproxy01 rtpproxy -A rtpproxy01-ext/rtpproxy01 -F -f -l 10.200.3.20/rtpproxy01 -m 10000 -M 10099 -s udp:*:7711 -d DBUG:LOG_LOCAL0
    environment:
      - constraint:node==p8-k
      # puede que en lugar de poner 192.168.0.1 que es la ip de host en overlay, deba poner la ip de host en docker_gwbridge
      # cambiar 10.200.3.60 por ip de bridge en wifi de maquina virtual
      #- RTPPROXY_OPTS=-A 192.168.1.110/192.168.0.3 -F -f -l 192.168.1.110/192.168.0.3 -m 10000 -M 10099 -s udp:*:7711 -d DBUG:LOG_LOCAL0
      - PORT_PROXY=7711
      - PORT_MIN=10000
      - PORT_MAX=10099
    command: rtpproxy -A rtpproxy01/rtpproxy01-int -F -f -l 10.200.3.53/rtpproxy01 -m 10000 -M 10099 -s udp:*:7711 -d DBUG:LOG_LOCAL0
    ports:
      - "10000-10099:10000-10099/udp"
#    hostname: rtpproxy01
    volumes:
      - /home/jorge/uc/prueba8/rtpproxy/etc/conf.d-01:/etc/conf.d
    container_name: rtpproxy01
    networks:
      uc-net:
        aliases:
          - rtpproxy01-int
      uc-ext:
        aliases:
          - rtproxy01-ext
      # docker_gwbridge:
      #   aliases:
      #     - rtpproxy01-host

  rtpproxy02:
    build: /home/jorge/uc/prueba8/rtpproxy
    #docker run -itd --name=rtpproxy02 -h rtpproxy02 -p 10100-10199:10100-10199/udp --net=prueba8_uc-net prueba8_rtpproxy02 rtpproxy -A rtpproxy02-ext/rtpproxy02 -F -f -l 10.200.3.99/rtpproxy02 -m 10100 -M 10199 -s udp:*:7722 -d DBUG:LOG_LOCAL0
    environment:
      - constraint:node==p8-r
      #- RTPPROXY_OPTS=-A 192.168.1.109/rtpproxy02 -F -f -l 192.168.1.109/rtpproxy02 -m 10100 -M 10199 -s udp:*:7722 -d DBUG:LOG_LOCAL0
      - PORT_PROXY=7722
      - PORT_MIN=10101
      - PORT_MAX=10199
    command: rtpproxy -A rtpproxy02/rtpproxy02-int -F -f -l 10.200.3.59/rtpproxy02 -m 10100 -M 10199 -s udp:*:7722 -d DBUG:LOG_LOCAL0
    ports:
      - "10100-10199:10100-10199/udp"
#    hostname: rtpproxy02
    volumes:
      - /home/jorge/uc/prueba8/rtpproxy/etc/conf.d-02:/etc/conf.d
    container_name: rtpproxy02
    networks:
      uc-net:
        aliases:
          - rtpproxy02-int
      uc-ext2:
        aliases:
          - rtproxy02-ext
      # docker_gwbridge:
      #   aliases:
      #     - rtpproxy02-host

# networks:
#   uc-net:
#     external:
#       name: uc-net
#   uc-ext:
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: 172.69.0.0/24
#           ip_range: 172.69.0.0/24
#           gateway: 172.69.0.1
networks:
  uc-net:
    external:
      name: uc-net
  uc-ext:
    external:
      name: p8-k/uc-ext
  uc-ext2:
    external:
      name: p8-r/uc-ext

# networks:
#   uc-net:
#     driver: overlay
#     internal: true
#     ipam:
#       driver: default
#       config:
#         - subnet: 192.168.0.0/24
#           ip_range: 192.168.0.0/24
#           gateway: 192.168.0.1
#   uc-ext:
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: 172.69.0.0/24
#           ip_range: 172.69.0.0/24
#           gateway: 172.69.0.1
